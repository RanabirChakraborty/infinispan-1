---
## check remote archive
- name: Set download archive path
  set_fact:
    archive: "{{ jdg_app_download_dir }}/{{ jdg.bundle }}"

- name: Check download archive path
  stat:
    path: "{{ archive }}"
  register: archive_path

- name: Check download archive path
  stat:
    path: "{{ lookup('env', 'PWD') }}"
  register: local_path
  delegate_to: localhost

## download
- name: Download infinispan archive
  get_url:
    url: "{{ infinispan_download_url }}"
    dest: "{{ local_path.stat.path }}/{{ jdg.bundle }}"
  delegate_to: localhost
  when:
    - archive_path is defined
    - archive_path.stat is defined
    - not archive_path.stat.exists
    - not jdg_enable
    - not jdg_offline_install

- name: Performing download from RHN
  redhat_csp_download:
    url: "{{ jdg_download_url }}"
    dest: "{{ local_path.stat.path }}/{{ jdg.bundle }}"
    username: "{{ rhn_username }}"
    password: "{{ rhn_password }}"
  no_log: "{{ omit_rhn_output | default(true) }}"
  delegate_to: localhost
  when:
    - archive_path is defined
    - archive_path.stat is defined
    - not archive_path.stat.exists
    - jdg_enable
    - not jdg_offline_install
    - jdg_download_url is match(jdg_rhn_url+".*")

- name: Download DataGrid archive from alternate location
  get_url:
    url: "{{ jdg_download_url }}"
    dest: "{{ local_path.stat.path }}/{{ jdg.bundle }}"
  delegate_to: localhost
  when:
    - archive_path is defined
    - archive_path.stat is defined
    - not archive_path.stat.exists
    - jdg_enable
    - not jdg_offline_install
    - not jdg_download_url is match(jdg_rhn_url+".*")

## copy and unpack
- name: Copy archive to target nodes
  copy:
    src: "{{ local_path.stat.path }}/{{ jdg.bundle }}"
    dest: "{{ archive }}"
    owner: "{{ jdg.user.name }}"
    group: "{{ jdg.group.name }}"
    mode: 0750
  register: new_version_downloaded
  become: yes

- name: "Check work directory: {{ jdg_app_download_dir }}"
  stat:
    path: "{{ jdg_app_download_dir }}"
  register: path_to_workdir
  become: yes

- name: "Create work directory {{ jdg_app_download_dir }}"
  file:
    path: "{{ jdg_app_download_dir }}"
    state: directory
    owner: "{{ jdg.user.name }}"
    group: "{{ jdg.group.name }}"
    mode: 0750
  become: yes
  when: not path_to_workdir.stat.exists

- name: "Extract {{ 'Red Hat Datagrid' if jdg_enable is defined else 'Infinispan' }} archive on target"
  unarchive:
    remote_src: yes
    src: "{{ archive }}"
    dest: "{{ jdg_app_download_dir }}"
    creates: "{{ jdg.installation_path }}"
    owner: "{{ jdg.user.name }}"
    group: "{{ jdg.group.name }}"
  become: yes
  when:
    - new_version_downloaded.changed or not path_to_workdir.stat.exists
  notify:
    - restart infinispan

- name: Inform decompression was not executed
  debug:
    msg: "{{ jdg.installation_path }} already exists and version unchanged, skipping decompression"
  when:
    - not new_version_downloaded.changed and path_to_workdir.stat.exists

- name: "Reown installation directory to {{ jdg.user.name }}"
  file:
    path: "{{ jdg.home }}"
    owner: "{{ jdg.user.name }}"
    group: "{{ jdg.group.name }}"
    recurse: true
  become: yes
  changed_when: false
